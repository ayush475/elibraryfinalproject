@model FinalProject.Models.Announcement

@{
    ViewData["Title"] = "Create Announcement"; // Adjusted title for clarity
}

@* Add a style block for CSS rules *@
<style>
    body {
        font-family: 'Inter', sans-serif; /* Sans-serif font, Inter suggested */
        background-color: #f2f4f8; /* Light purple/blue from reference */
        margin: 0;
        padding: 0;
    }

    .container {
        max-width: 800px; /* Limit form width for better readability */
        margin: 20px auto; /* Center the container with margin */
        padding: 30px; /* Increased padding */
        background-color: #ffffff; /* White background for the content area */
        border-radius: 8px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1); /* Soft shadow for depth */
    }

    .ui-heading {
        color: #333; /* Dark grey for text */
        font-size: 2.5em; /* Large heading size */
        margin-bottom: 20px;
        text-align: center;
    }

    .form-group {
        margin-bottom: 20px; /* Space between form groups */
    }

    .control-label {
        font-weight: bold; /* Make labels bold */
        color: #555; /* Slightly lighter text for labels */
        display: block; /* Ensure label is on its own line */
        margin-bottom: 8px; /* Space below label */
    }

    .form-control {
        width: 100%; /* Full width input fields */
        padding: 10px 12px;
        border: 1px solid #ccc; /* Light grey border */
        border-radius: 4px;
        font-size: 1em;
        box-sizing: border-box; /* Include padding and border in element's total width */
    }

    .form-control:focus {
        border-color: #00a398; /* Highlight border on focus */
        outline: none; /* Remove default outline */
        box-shadow: 0 0 5px rgba(0, 163, 152, 0.3); /* Subtle shadow on focus */
    }

    .form-check-label {
        font-weight: normal; /* Default weight for checkbox label */
        color: #555;
        margin-left: 5px; /* Space from checkbox */
    }

     .form-check-input {
         margin-top: 0.3em; /* Align checkbox better */
     }

    .text-danger {
        color: #e57373; /* Soft red for validation messages */
        font-size: 0.9em;
        margin-top: 5px;
        display: block; /* Ensure validation message is on its own line */
    }

    .ui-button {
        display: inline-block;
        background-color: #ff8a65; /* Coral/Orange button color */
        color: white;
        padding: 12px 24px; /* Adjusted padding */
        text-decoration: none;
        border-radius: 5px;
        font-size: 1.1em;
        transition: background-color 0.3s ease; /* Smooth transition on hover */
        box-shadow: 0 2px 5px rgba(0,0,0,0.2); /* Added shadow */
        border: none; /* Remove default button border */
        cursor: pointer; /* Indicate it's clickable */
        margin-top: 15px; /* Space above the button */
    }

    .ui-button:hover {
        background-color: #ff7043; /* Slightly darker orange on hover */
    }

    .back-link {
        display: block; /* Make the link a block element */
        margin-top: 20px; /* Space above the link */
        text-align: center; /* Center the link */
        color: #00a398; /* Teal/Green color for the link */
        text-decoration: none;
        font-size: 1.1em;
        transition: color 0.3s ease;
    }

    .back-link:hover {
        text-decoration: underline; /* Underline on hover */
        color: darken(#00a398, 10%); /* Slightly darker on hover */
    }

     /* Style for the success message - Less common on create view, but included for consistency */
    .alert-success {
        padding: 15px;
        margin-bottom: 20px;
        border: 1px solid transparent;
        border-radius: 44px; /* More rounded corners */
        color: #155724; /* Dark green text */
        background-color: #d4edda; /* Light green background */
        border-color: #c3e6cb; /* Green border */
    }

</style>

@* Add a container div for the main content area *@
<div class="container">

    @* Apply heading style *@
    <h1 class="ui-heading">Create Announcement</h1> @* Adjusted heading text *@

     @* --- Add this section to display the success message from TempData --- *@
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["SuccessMessage"]
        </div>
    }
    @* --- End of success message section --- *@


    <hr />
    <div class="row">
        <div class="col-md-8 offset-md-2"> @* Center the form and limit its width *@
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Message" class="control-label"></label>
                    <textarea asp-for="Message" class="form-control" rows="4"></textarea> @* Use textarea for message *@
                    <span asp-validation-for="Message" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="StartTime" class="control-label"></label>
                    <input asp-for="StartTime" class="form-control" type="datetime-local" /> @* Use datetime-local type *@
                    <span asp-validation-for="StartTime" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="EndTime" class="control-label"></label>
                    <input asp-for="EndTime" class="form-control" type="datetime-local" /> @* Use datetime-local type *@
                    <span asp-validation-for="EndTime" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                    </label>
                </div>
                @* Removed DateAdded and DateUpdated fields - these should be set by the server *@
                @*
                <div class="form-group">
                    <label asp-for="DateAdded" class="control-label"></label>
                    <input asp-for="DateAdded" class="form-control" />
                    <span asp-validation-for="DateAdded" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DateUpdated" class="control-label"></label>
                    <input asp-for="DateUpdated" class="form-control" />
                    <span asp-validation-for="DateUpdated" class="text-danger"></span>
                </div>
                *@
                <div class="form-group">
                    <input type="submit" value="Create" class="ui-button" /> @* Styled the submit button *@
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index" class="back-link">Back to List</a> @* Styled the back link *@
    </div>

</div> @* Close the main container div *@

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

@* Notes:
1.  This code includes inline <style> tags for demonstration purposes. For a production application, it's best practice to move these styles to a separate CSS file (e.g., wwwroot/css/announcement-form.css) and link it in your _Layout.cshtml file.
2.  The styling is adapted from the list views to provide a consistent look and feel for the form elements.
3.  The input fields for `DateAdded` and `DateUpdated` have been removed from the form as these values should be automatically set by your controller or database logic upon creation.
4.  Changed the `Message` input to a `textarea` for potentially longer announcement messages.
5.  Changed `StartTime` and `EndTime` input types to `datetime-local` for a better user experience when selecting dates and times.
6.  Added a success message display block using `TempData`, although displaying a success message is more typical after a redirect (like from the POST action back to the Index).
7.  Added basic centering and width limitation to the form using Bootstrap grid classes (`col-md-8 offset-md-2`). Ensure Bootstrap CSS is included in your project.
8.  Styled the "Back to List" link using the `back-link` class.
*@
