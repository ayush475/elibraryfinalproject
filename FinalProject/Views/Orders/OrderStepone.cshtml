@model List<FinalProject.ViewModels.ShoppingCartItemViewModel>

@{
    ViewData["Title"] = "Order Review";
    // Retrieve the totals from ViewData, using null-conditional operator and default values for safety
    var totalCartItems = ViewData["TotalCartItems"] as int? ?? 0;
    var totalCartPrice = ViewData["TotalCartPrice"] as string ?? "$0.00";
}

<div class="container mt-4">
    <div class="card shadow-sm"> @* Added Card structure with shadow *@
        <div class="card-header bg-success text-white"> @* Styled card header, perhaps a different color for the order process *@
            <h2 class="card-title mb-0">Order Review</h2> @* Styled heading inside card *@
        </div>
        <div class="card-body">

             @* Display error message if redirected from an empty cart scenario *@
             @if (TempData["ErrorMessage"] != null)
             {
                 <div class="alert alert-danger text-center" role="alert">
                     @TempData["ErrorMessage"]
                 </div>
             }

            @if (Model == null || !Model.Any())
            {
                <div class="alert alert-warning text-center" role="alert"> @* Centered alert text *@
                    No items found in your cart for review.
                    @* Link back to the shopping cart page *@
                    <p class="mt-2 mb-0"><a href="@Url.Action("Profile", "ShoppingCartItems")" class="alert-link">Return to Shopping Cart</a></p>
                </div>
            }
            else
            {
                <p>Please review the items in your order before proceeding.</p>

                <div class="table-responsive"> @* Added responsive table wrapper *@
                    <table class="table table-striped table-bordered table-hover">
                        <thead class="thead-light"> @* Maybe a lighter table header for review *@
                            <tr>
                                <th>
                                    Book Title @* Can hardcode headers in the view if preferred *@
                                </th>
                                <th>
                                    Author
                                </th>
                                <th class="text-center" style="width: 100px;"> @* Adjusted column width and centered *@
                                    Quantity
                                </th>
                                <th class="text-right"> @* Aligned right *@
                                    Price
                                </th>
                                <th class="text-right"> @* Aligned right *@
                                    Subtotal
                                </th>
                                @* Date Added might not be relevant for the review step, you can remove this column *@
                                @* <th>Date Added</th> *@
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.BookTitle)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.BookAuthorName)
                                    </td>
                                    <td class="text-center"> @* Centered text *@
                                        @Html.DisplayFor(modelItem => item.Quantity)
                                    </td>
                                    <td class="text-right"> @* Aligned right *@
                                        @Html.DisplayFor(modelItem => item.BookListPriceDisplay)
                                    </td>
                                    <td class="text-right"> @* Aligned right *@
                                        @Html.DisplayFor(modelItem => item.TotalPriceDisplay)
                                    </td>
                                     @* Only include if you kept the Date Added column *@
                                     @* <td> @Html.DisplayFor(modelItem => item.DateAddedDisplay) </td> *@
                                </tr>
                            }
                        </tbody>
                    </table>
                </div> @* End of table-responsive *@

                <div class="row mt-4"> @* Added row for summary and navigation buttons *@
                    <div class="col-md-6 offset-md-6"> @* Offset column to push summary to the right *@
                        <div class="card bg-light"> @* Added a light card for the summary *@
                            <div class="card-body">
                                <h5 class="card-title">Order Summary</h5>
                                <ul class="list-group list-group-flush"> @* Used list group for summary items *@
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        Total Items
                                        @* Display Total Items from ViewData *@
                                        <span class="badge badge-primary badge-pill text-black">@totalCartItems</span>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between align-items-center font-weight-bold">
                                        Grand Total
                                        @* Display Grand Total from ViewData, perhaps a different color for the final total *@
                                        <span class="text-success">@totalCartPrice</span>
                                    </li>
                                </ul>
                                <div class="mt-3 d-flex justify-content-between"> @* Use flexbox to space out buttons *@
                                    @* Link back to the shopping cart to make changes *@
                                    <a href="@Url.Action("Profile", "ShoppingCartItems")" class="btn btn-secondary">Back to Cart</a>

                                    @* Button to proceed to the next step (e.g., Shipping or Payment) *@
                                    @* TODO: Replace '#' with the actual URL/action for your "Proceed to Payment" or next step *@
                                    <a href="#" class="btn btn-success btn-lg">Proceed to Payment</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div> @* End of card-body *@
    </div> @* End of card *@
</div> @* End of container *@
