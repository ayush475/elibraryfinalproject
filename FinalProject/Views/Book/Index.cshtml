@model IEnumerable<FinalProject.Models.Book>

@{
    ViewData["Title"] = "Books Index"; // More descriptive title
    // Retrieve pagination and search data from ViewBag
    var currentPage = ViewBag.CurrentPage;
    var totalPages = ViewBag.TotalPages;
    var searchString = ViewBag.SearchString;
}

<h1>Book List</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@* Add the search form *@
<form asp-controller="Book" asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by title, author, or ISBN: <input type="text" name="searchString" value="@searchString" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Isbn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            @* Optional: Hide Description to keep table concise, maybe show on Details *@
            @*<th>
                @Html.DisplayNameFor(model => model.Description)
            </th>*@
            @* Optional: Hide Cover Image URL in the main table *@
            @*<th>
                @Html.DisplayNameFor(model => model.CoverImageUrl)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.PublicationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ListPrice)
            </th>
            @* Optional: Hide some less critical columns for a cleaner table overview *@
            @*<th>
                @Html.DisplayNameFor(model => model.Language)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Format)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.AvailabilityStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AvailabilityLibrary)
            </th>
             <th>
                @Html.DisplayNameFor(model => model.Rating)
            </th>
            @* Optional: Hide RatingCount for a cleaner table *@
            @*<th>
                @Html.DisplayNameFor(model => model.RatingCount)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.OnSale)
            </th>
             @* Optional: Hide Sale details for a cleaner table *@
            @*<th>
                @Html.DisplayNameFor(model => model.SaleDiscount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SaleStartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SaleEndDate)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.DateAdded)
            </th>
             @* Optional: Hide DateUpdated for a cleaner table *@
            @*<th>
                @Html.DisplayNameFor(model => model.DateUpdated)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Publisher)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genre)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Isbn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            @* Description and Cover Image URL (hidden)*@
            @*<td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CoverImageUrl)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.PublicationDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ListPrice)
            </td>
             @* Language and Format (hidden)*@
            @*<td>
                @Html.DisplayFor(modelItem => item.Language)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Format)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.AvailabilityStock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AvailabilityLibrary)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
             @* RatingCount (hidden)*@
            @*<td>
                @Html.DisplayFor(modelItem => item.RatingCount)
            </td>*@
             <td>
                @Html.DisplayFor(modelItem => item.OnSale)
            </td>
             @* Sale details (hidden)*@
             @*<td>
                @Html.DisplayFor(modelItem => item.SaleDiscount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SaleStartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SaleEndDate)
            </td>*@
             <td>
                @Html.DisplayFor(modelItem => item.DateAdded)
            </td>
            @* DateUpdated (hidden)*@
            @*<td>
                @Html.DisplayFor(modelItem => item.DateUpdated)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Author.FirstName) @Html.DisplayFor(modelItem => item.Author.LastName) @* Display full author name *@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Publisher.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre.Name)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.BookId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.BookId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.BookId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@* Add Pagination Links *@
@{
    // Define route values for pagination links, preserving the current search string
    var prevDisabled = (currentPage <= 1) ? "disabled" : "";
    var nextDisabled = (currentPage >= totalPages) ? "disabled" : "";
}

@if (totalPages > 1) // Only show pagination if there's more than one page
{
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            <li class="page-item @prevDisabled">
                 <a asp-action="Index"
                   asp-route-pageNumber="@(currentPage - 1)"
                   asp-route-searchString="@searchString"
                   class="page-link">
                    Previous
                </a>
            </li>

            @* Optional: Add page number links (more complex, skipped for simplicity here)*@
            @* You could loop from 1 to totalPages to create individual page links *@
             @for (var i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a asp-action="Index"
                       asp-route-pageNumber="@i"
                       asp-route-searchString="@searchString"
                       class="page-link">
                        @i
                    </a>
                </li>
            }


            <li class="page-item @nextDisabled">
                <a asp-action="Index"
                   asp-route-pageNumber="@(currentPage + 1)"
                   asp-route-searchString="@searchString"
                   class="page-link">
                    Next
                </a>
            </li>
        </ul>
    </nav>

    <div class="text-center">
        Page @currentPage of @totalPages
    </div>
}