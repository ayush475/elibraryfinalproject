@model FinalProject.Models.Book

@{
    ViewData["Title"] = Model.Title; // Use the book title for the page title
}

<h1>@Html.DisplayFor(model => model.Title)</h1>

@* Display TempData message if it exists *@
@if (TempData["Message"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div>
    <h4>Details</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Isbn)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Isbn)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CoverImageUrl)
        </dt>
        <dd class = "col-sm-10">
            @* Display the image if URL exists *@
            @if (!string.IsNullOrEmpty(Model.CoverImageUrl))
            {
                <img src="@Model.CoverImageUrl" alt="Book Cover" style="max-width: 200px; height: auto;" />
            }
            else
            {
                 <span>No cover image available</span>
            }
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PublicationDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PublicationDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ListPrice)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ListPrice)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class = "col-sm-10">
            @* Add null check for Author (Addresses CS8602 warning in views) *@
            @(Model.Author != null ? $"{Model.Author.FirstName} {Model.Author.LastName}" : "Unknown Author")
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Publisher)
        </dt>
        <dd class = "col-sm-10">
            @* Add null check for Publisher (Addresses CS8602 warning in views) *@
            @(Model.Publisher != null ? Model.Publisher.Name : "Unknown Publisher")
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd class = "col-sm-10">
            @* Add null check for Genre (Addresses CS8602 warning in views) *@
            @(Model.Genre != null ? Model.Genre.Name : "Unknown Genre")
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Language)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Language)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Format)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Format)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.AvailabilityStock)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.AvailabilityStock)
        </dd>
         <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.AvailabilityLibrary)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.AvailabilityLibrary)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Rating)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Rating)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.RatingCount)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.RatingCount)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.OnSale)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.OnSale)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.SaleDiscount)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SaleDiscount)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.SaleStartDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SaleStartDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.SaleEndDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SaleEndDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateAdded)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateAdded)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateUpdated)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateUpdated)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.BookId">Edit</a> |
    <a asp-action="Index">Back to List</a>

    @* Add Bookmark button on Details page *@
    @if (User?.Identity?.IsAuthenticated == true)
    {
        // Check if the book is bookmarked (assuming ViewBag.IsBookmarked is set in Details action)
        if (ViewBag.IsBookmarked != null && ViewBag.IsBookmarked == true)
        {
            <span class="btn btn-success disabled" title="You have bookmarked this book.">Bookmarked</span>
        }
        else
        {
            @* Create a small form for the Bookmark action *@
            <form asp-controller="Book" asp-action="Bookmark" method="post" style="display:inline;">
                <input type="hidden" name="bookId" value="@Model?.BookId" />
                @Html.AntiForgeryToken() @* Include the anti-forgery token *@
                <button type="submit" class="btn btn-outline-primary" title="Bookmark this book">Bookmark</button>
            </form>
        }
    }
    else
    {
        @* Optional: Show a disabled button or message for unauthenticated users *@
        <span class="btn btn-outline-secondary disabled" title="Login to bookmark books">Bookmark</span>
    }
</div>
