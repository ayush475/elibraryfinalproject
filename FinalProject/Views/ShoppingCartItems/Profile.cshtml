@model List<FinalProject.ViewModels.ShoppingCartItemViewModel>

@{
    ViewData["Title"] = "My Shopping Cart";
}

<div class="container mt-4">
    <div class="card shadow-sm"> @* Added Card structure with shadow *@
        <div class="card-header bg-primary text-white"> @* Styled card header *@
            <h2 class="card-title mb-0">My Shopping Cart</h2> @* Styled heading inside card *@
        </div>
        <div class="card-body">

            @if (Model == null || !Model.Any())
            {
                <div class="alert alert-info text-center" role="alert"> @* Centered alert text *@
                    Your shopping cart is empty.
                    <p class="mt-2 mb-0"><a href="#" class="alert-link">Continue Shopping</a></p> @* Added a link to continue shopping *@
                </div>
            }
            else
            {
                <div class="table-responsive"> @* Added responsive table wrapper *@
                    <table class="table table-striped table-bordered table-hover">
                        <thead class="thead-dark">
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.First().BookTitle)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.First().BookAuthorName)
                                </th>
                                <th class="text-center" style="width: 100px;"> @* Adjusted column width and centered *@
                                    @Html.DisplayNameFor(model => model.First().Quantity)
                                </th>
                                <th class="text-right"> @* Aligned right *@
                                    @Html.DisplayNameFor(model => model.First().BookListPriceDisplay)
                                </th>
                                <th class="text-right"> @* Aligned right *@
                                    @Html.DisplayNameFor(model => model.First().TotalPriceDisplay)
                                </th>
                                <th class="text-nowrap"> @* Prevent wrapping for date *@
                                    @Html.DisplayNameFor(model => model.First().DateAddedDisplay)
                                </th>
                                <th style="width: 100px;">Actions</th> @* Column for actions *@
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.BookTitle)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.BookAuthorName)
                                    </td>
                                    <td class="text-center"> @* Centered text *@
                                        @Html.DisplayFor(modelItem => item.Quantity)
                                    </td>
                                    <td class="text-right"> @* Aligned right *@
                                        @Html.DisplayFor(modelItem => item.BookListPriceDisplay)
                                    </td>
                                    <td class="text-right"> @* Aligned right *@
                                        @Html.DisplayFor(modelItem => item.TotalPriceDisplay)
                                    </td>
                                     <td>
                                        @Html.DisplayFor(modelItem => item.DateAddedDisplay)
                                    </td>
                                    <td>
                                        @* Example Bootstrap button for remove action: *@
                                        @* You'll need to replace "#" with your actual remove action URL and pass the item ID *@
                                        <a href="#" class="btn btn-danger btn-sm">Remove</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div> @* End of table-responsive *@

                <div class="row mt-4"> @* Added row for summary and checkout *@
                    <div class="col-md-6 offset-md-6"> @* Offset column to push summary to the right *@
                        <div class="card bg-light"> @* Added a light card for the summary *@
                            <div class="card-body">
                                <h5 class="card-title">Order Summary</h5>
                                <ul class="list-group list-group-flush"> @* Used list group for summary items *@
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        Total Items
                                        <span class="badge badge-primary badge-pill">@Model.Sum(item => item.Quantity)</span> @* Display total quantity *@
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between align-items-center font-weight-bold">
                                        Grand Total
                                        @* You'll need to calculate the grand total here. Assuming TotalPriceDisplay is a string like "$X.XX" or you have a separate numeric property for the total. If you have a numeric property (e.g., `decimal TotalCartPrice`), use that and format it. Otherwise, you might need to calculate it in the controller or add a property to the ViewModel. For now, let's assume you have a `TotalCartPriceDisplay` string property or similar. *@
                                        @* Example using a placeholder: *@@* Replace with your actual total property *@
                                        <span class="text-success">$$$ Total Here $$$</span> @* Placeholder for Grand Total *@
                                    </li>
                                </ul>
                                <div class="mt-3 text-right"> @* Aligned button to the right *@
                                    @* Replace "#" with your actual checkout action URL *@
                                    <a href="#" class="btn btn-success btn-lg">Proceed to Checkout</a> @* Prominent checkout button *@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div> @* End of card-body *@
    </div> @* End of card *@
</div> @* End of container *@